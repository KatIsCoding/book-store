{"version":3,"sources":["redux/books/books.js","redux/books/api.js","components/booksComponents/addBook.js","components/booksComponents/removeBook.js","components/books.js","components/categories.js","reportWebVitals.js","redux/configureStore.js","index.js"],"names":["BooksObj","this","API_URL","fetch","then","res","json","book","a","method","headers","body","JSON","stringify","bookId","ADD_BOOK","REMOVE_BOOK","addBook","payload","type","deleteBook","id","dispatch","response","ok","reducer","state","action","filter","AddNewBookComponent","useDispatch","handleSubmit","e","bookTitle","target","elements","value","bookAuthor","category","Date","now","title","author","requestBook","item_id","postNew","styles","height","width","className","onSubmit","preventDefault","placeholder","RemoveBook","bookID","onClick","loaded","BookComponent","props","ListGroup","Item","style","Books","books","useSelector","useEffect","getAll","Object","keys","forEach","split","map","Categories","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","name","property","content","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","to","icon","faUser","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.7658c437.chunk.js","sourcesContent":["import BooksAPI from './api';\n\nconst BooksObj = new BooksAPI();\nconst ADD_BOOK = 'bookStore/books/ADD_BOOK';\nconst REMOVE_BOOK = 'bookStore/books/REMOVE_BOOK';\n\nconst addBook = (payload) => ({\n  type: ADD_BOOK,\n  payload,\n});\n\nexport const removeBook = (payload) => ({\n  type: REMOVE_BOOK,\n  payload,\n});\n\nexport const deleteBook = (id) => (dispatch) => {\n  BooksObj.deleteBook(id).then((response) => {\n    if (response.ok) {\n      dispatch(removeBook(id));\n    }\n  });\n};\n\nexport const postNewBook = (book) => (dispatch) => {\n  const requestBook = {\n    item_id: book.id,\n    title: `${book.title}|${book.author}`,\n    category: book.category,\n  };\n  BooksObj.postNew(requestBook).then((response) => {\n    if (response.ok) {\n      dispatch(addBook(book));\n    }\n  });\n};\n\nexport const loadInitialBooks = () => (dispatch) => {\n  BooksObj.getAll().then((books) => {\n    Object.keys(books).forEach((bookID) => {\n      const book = {};\n      const [bookTitle, bookAuthor] = books[bookID][0].title.split('|');\n      book.id = bookID;\n      book.title = bookTitle;\n      book.author = bookAuthor;\n      book.category = books[bookID][0].category;\n      dispatch(addBook(book));\n    });\n  });\n};\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case ADD_BOOK:\n      return [...state, action.payload];\n    case REMOVE_BOOK:\n      return state.filter((book) => book.id !== action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export default class BooksAPI {\n  constructor() {\n    this.API_URL = 'https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/TjwZyMOGQJO3ZFQ61Exw';\n  }\n\n  getAll() {\n    return fetch(`${this.API_URL}/books`).then((res) => res.json());\n  }\n\n  async postNew(book) {\n    return fetch(`${this.API_URL}/books`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(book),\n    });\n  }\n\n  async deleteBook(bookId) {\n    return fetch(`${this.API_URL}/books/${bookId}`, {\n      method: 'DELETE',\n    });\n  }\n}\n","import { useDispatch } from 'react-redux';\nimport { postNewBook } from '../../redux/books/books';\nimport './addBook.css';\n\nexport default function AddNewBookComponent() {\n  const dispatch = useDispatch();\n  const handleSubmit = (e) => {\n    const bookTitle = e.target.elements.bookTitle.value;\n    const bookAuthor = e.target.elements.bookAuthor.value;\n    const category = e.target.elements.category.value;\n    const id = Date.now();\n    e.target.elements.bookTitle.value = '';\n    e.target.elements.bookAuthor.value = '';\n    e.target.elements.category.value = '';\n    dispatch(postNewBook({\n      title: bookTitle, author: bookAuthor, id, category,\n    }));\n  };\n\n  return (\n    <div>\n      <hr styles={{ height: 1, width: '100%' }} />\n      <h2>Add New Book</h2>\n      <form\n        className=\"form-inline mainForm\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSubmit(e);\n        }}\n      >\n        <div className=\"form-row form-group col-md-6\">\n          <input id=\"bookTitle\" className=\"form-control\" type=\"text\" placeholder=\"Book Title\" />\n          <input id=\"bookAuthor\" className=\"form-control\" type=\"text\" placeholder=\"Author\" />\n          <input id=\"category\" className=\"form-control\" type=\"text\" placeholder=\"Category\" />\n          <button type=\"submit\" className=\"btn btn-primary submitForm\">Add Book</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteBook } from '../../redux/books/books';\n\nexport default function RemoveBook({ bookID }) {\n  const dispatch = useDispatch();\n\n  const handleRemove = () => {\n    dispatch(deleteBook(bookID));\n  };\n\n  return (\n    <button type=\"button\" className=\"btn btn-link\" onClick={handleRemove}>\n      Remove\n    </button>\n  );\n}\n\nRemoveBook.propTypes = {\n  bookID: PropTypes.string.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport PropTypes from 'prop-types';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport AddNewBookComponent from './booksComponents/addBook';\nimport RemoveBook from './booksComponents/removeBook';\nimport { loadInitialBooks } from '../redux/books/books';\nimport 'react-circular-progressbar/dist/styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './books.css';\n\nlet loaded = false;\nfunction BookComponent(props) {\n  const {\n    title, id, author, category,\n  } = props;\n  return (\n    <ListGroup.Item className=\"bookEntry\">\n      <div className=\"bookInformation\">\n        <h6 className=\"bookCategory\">{category}</h6>\n        <h3 className=\"bookTitle\">{title}</h3>\n        <h6 className=\"bookAuthor\">{author}</h6>\n        <div className=\"buttons-handler\">\n          <RemoveBook bookID={id} />\n          <button type=\"button\" className=\"btn btn-link\">Comments</button>\n          <button type=\"button\" className=\"btn btn-link\">Edit</button>\n        </div>\n\n      </div>\n      <div className=\"progressInformation\">\n        <div className=\"bookProgress\">\n          <CircularProgressbar value=\"69\" />\n        </div>\n        <div className=\"textualProgress\">\n          <h5>69%</h5>\n          <h6>Completed</h6>\n        </div>\n      </div>\n      <div className=\"separator\">\n        <hr style={{ height: 100, width: 2 }} />\n      </div>\n      <div className=\"progressDetails\">\n        <h6>CURRENT CHAPTER</h6>\n        <h5>Chapter 1</h5>\n        <button type=\"button\" className=\"btn btn-primary\">Update Progress</button>\n      </div>\n\n    </ListGroup.Item>\n  );\n}\n\nBookComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n};\n\nfunction Books() {\n  const books = useSelector((state) => state.books);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!loaded) {\n      dispatch(loadInitialBooks());\n      loaded = true;\n    }\n  }, []);\n\n  return (\n    <div>\n      <ListGroup className=\"booksWrapper\">\n        {books.map((book) => (\n          <BookComponent\n            key={book.id}\n            title={book.title}\n            author={book.author}\n            id={book.id}\n            category={book.category}\n          />\n        ))}\n      </ListGroup>\n      <AddNewBookComponent />\n    </div>\n  );\n}\n\nexport default Books;\n","export default function Categories() {\n  return (\n    <div className=\"categories\">\n      <h1>Under development</h1>\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport books from './books/books';\n\nconst rootReducer = combineReducers({\n  books,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Books from './components/books';\nimport Categories from './components/categories';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <meta name=\"image\" property=\"og:image\" content=\"https://github.com/microverseinc/curriculum-react-redux/raw/main/bookstore/images/bookstore.png\" />\n    <meta name=\"author\" content=\"Fabrizio Gomez\" />\n    <Provider store={store}>\n\n      <Router>\n        <Navbar bg=\"light\" expand=\"lg\">\n\n          <Navbar.Brand className=\"NavTitle\">BookStore CMS</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"container-fluid\">\n              <Nav.Link as={Link} to=\"/\">Books</Nav.Link>\n              <Nav.Link as={Link} to=\"/categories\">Categories</Nav.Link>\n            </Nav>\n            <Nav.Link as={Link} to=\"/\" className=\"justify-content-end\">\n              <FontAwesomeIcon icon={faUser} />\n            </Nav.Link>\n          </Navbar.Collapse>\n\n        </Navbar>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Books />\n          </Route>\n          <Route exact path=\"/categories\">\n            <Categories />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}